#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/_includes.sh"

ROOT=`realpath ${BASH_SOURCE%/*}/../..`


usage_name "dot"

usage_cmd link <<-DESC
	Links everything
DESC

usage_cmd link-file "<src>" "<dst>" <<-DESC
	Links <src> to <dst> safely
DESC


usage_cmd osname <<-DESC
	Prints the name for the current os
DESC

usage_cmd help <<-DESC
	Prints this doc.
DESC


dot() {
	required "cmd" $1

	case $cmd in
		link-file)
			required src $2
			required dst $3

			cur=`readlink -n "$dst"`
			pretty="~/$(realpath -s --relative-to="$HOME" "$dst")"

			if [ ! -z "$cur" ]; then
				if [ "$cur" == "$src" ]; then
					echo "$(dim "Found $pretty")"
				else
					echo $(yellow "$pretty -> $cur already linked")
				fi
			elif [ -e "$dst" ]; then
				echo "$(red "$pretty exists!")"
			else
				ln -ns $FLAGS "$src" "$dst" && echo "$(green Linked) $pretty"
			fi
			;;

		link)
			dot link-home home && show $(green "Done!")
			;;

		link-home)
			required folder "$2"

			for f in `ls -A $folder`; do
				dot link-file "$ROOT/$folder/$f" "$HOME/$f"
			done
			;;

		osname)
			uname -a | cut -d " " -f 1 | tr '[:upper:]' '[:lower:]'
			;;

		help | usage)
			usage
			;;

		*)
			error "'$1' is not a valid command."
			;;
	esac
}

dot "$@"

# list() {
#    find `pwd -P`/$1 -maxdepth 1 -mindepth 1
# }


# TODO: Figure out how to make something like this work:
# for f in `ls Preferences`
# do
#   ln "$PWD/Preferences/$f" "$HOME/Library/Preferences/$f"
# done
